name: ci

on:
  push:
    branches:
      - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Checkout the code
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1 
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build and push the client image
        env:
          API_URL: server:8081
          PORT: 8080
          NGINX_PORT: 8080
        run: |
          docker-compose version
          docker-compose -f docker-compose.yml -f docker-compose.build.yml config #checking var substitution
          docker-compose -f docker-compose.yml -f docker-compose.build.yml build
          docker-compose -f docker-compose.yml -f docker-compose.build.yml push


          ##############
          #folder="client"
          #IMAGE_NAME=monumap-client

          #tmpName="client-$RANDOM"
          #docker build $folder --file $folder/Dockerfile --tag $tmpName
          #IMAGE_ID=prforge/$IMAGE_NAME
          #VERSION=$(echo $GITHUB_SHA | cut -c1-7)

          #echo IMAGE_ID=$IMAGE_ID
          #echo VERSION=$VERSION

          #docker tag $tmpName $IMAGE_ID:$VERSION
          #docker push $IMAGE_ID:$VERSION

          #docker tag $tmpName $IMAGE_ID:latest
          #docker push $IMAGE_ID:latest

          #############
          #folder="server"
          #IMAGE_NAME=monumap-server

          #tmpName="server-$RANDOM"
          #docker build $folder --file $folder/Dockerfile --tag $tmpName
          #IMAGE_ID=prforge/$IMAGE_NAME
          #VERSION=$(echo $GITHUB_SHA | cut -c1-7)

          #echo IMAGE_ID=$IMAGE_ID
          #echo VERSION=$VERSION

          #docker tag $tmpName $IMAGE_ID:$VERSION
          #docker push $IMAGE_ID:$VERSION

          #docker tag $tmpName $IMAGE_ID:latest
          #docker push $IMAGE_ID:latest


